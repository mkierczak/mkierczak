[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Saga",
    "section": "",
    "text": "Pest in R using R6 classes\n\n\n12 min\n\n\nAgent-based simulation of epidemics in R using OOP and R6 classes.\n\n\n\nJun 20, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/R6_disease_sim.html",
    "href": "posts/R6_disease_sim.html",
    "title": "Pest in R using R6 classes",
    "section": "",
    "text": "Hello! In this post, I will show you how one can implement an agent-based simulation in R using object-oriented programming paradigm (OOP) and R R6 classes. (\nThis simulation is working yet it still has to be polished. It has been implemented as a live coding demo during “OOP in R” session at RaukR 2024.\nOur goal is to simulate epidemics dynamics on an island (an isolated world). Let us establish some simple rules:"
  },
  {
    "objectID": "posts/R6_disease_sim.html#an-individual",
    "href": "posts/R6_disease_sim.html#an-individual",
    "title": "Pest in R using R6 classes",
    "section": "An individual",
    "text": "An individual\nLet’s begin by formulating an R6 class that represents an individual (= agent):\n\nlibrary(R6)\n\nAgent &lt;- R6Class(\"Agent\",\n  public = list(\n    state = character(),\n    initialize = function(state = \"healthy\") {\n      self$state &lt;- state\n    },\n    update_state = function(sick_prob, recovery_prob, death_prob) {\n      # If agent is healthy it can either stay healthy or get infected\n      if (self$state == \"healthy\") {\n        new_state &lt;- sample(x = c(\"healthy\", \"sick\"), \n                       size = 1, \n                       prob = c(1-sick_prob, sick_prob))\n      # A sick agent can continue being sick, recover and become immune or die\n      } else if (self$state == \"sick\") { \n        new_state &lt;- sample(x = c(\"sick\", \"immune\", \"dead\"), \n                       size = 1, \n                       prob = c((1-(recovery_prob + death_prob)), recovery_prob, death_prob))\n      \n      } else {\n        new_state &lt;- self$state # Immune and dead states do not change\n      }\n      self$state &lt;- new_state  # Update state\n    }\n  )\n)\n\nObserve that:\n\nThe default state of a new agent is “healthy”\nWe use sample and its prob argument to sample agent’s fate according to provided probabilities\n“immune” and “dead” states do not change\nwhen an individual is sick it can either continue to be sick, recover and become immune or die\nwe are using the fact that probabilities of mutually exclusive elementary events sum to 1"
  },
  {
    "objectID": "posts/R6_disease_sim.html#simulation-world",
    "href": "posts/R6_disease_sim.html#simulation-world",
    "title": "Pest in R using R6 classes",
    "section": "Simulation world",
    "text": "Simulation world\n Now it is time to create a class for our world which we can next populate with our agents. We need the following:\n\nvariable size where we store information about our world size N,\nvariable world which will store our representation of the world. Since the world is a square, we can use R base data structure – matrix and each cell in the matrix will contain a list of our individuals that dwell there – they are of class Agent that we have just created\nmethod initialize that creates the world\nmethod add_agent to populate our world\nmethod move_agent to move agents around at each simulation step\nmethod update_states that updates states of agents\nmethod get_counts that will record current state of the world (count of healthy, sick etc.)\n\n\nWorld &lt;- R6Class(\"World\",\n  public = list(\n    size = NULL,\n    world = NULL,\n    \n    initialize = function(size) {\n      self$size &lt;- size\n      self$world &lt;- matrix(vector(\"list\", size * size), nrow = size, ncol = size)\n      for (i in 1:size) {\n        for (j in 1:size) {\n          self$world[[i, j]] &lt;- list()\n        }\n      }\n    },\n    \n    add_agent = function(row, col, agent) {\n      self$world[[row, col]] &lt;- c(self$world[[row, col]], list(agent))\n    },\n    \n    move_agents = function() {\n      new_world &lt;- matrix(vector(\"list\", self$size * self$size), nrow = self$size, ncol = self$size)\n      for (i in 1:self$size) {\n        for (j in 1:self$size) {\n          agents &lt;- self$world[[i, j]]\n          for (agent in agents) {\n            if (agent$state != \"dead\") { # dead do not move\n              move &lt;- rnorm(2, mean = 0, sd = 1) # some arbitrary motility\n              new_row &lt;- min(max(1, round(i + move[1])), self$size)\n              new_col &lt;- min(max(1, round(j + move[2])), self$size)\n              new_world[[new_row, new_col]] &lt;- c(new_world[[new_row, new_col]], list(agent))\n            } else {\n              new_world[[i, j]] &lt;- c(new_world[[i, j]], list(agent))\n            }\n          }\n        }\n      }\n      self$world &lt;- new_world\n    },\n    \n    update_states = function(beta, recovery_prob, death_prob) {\n      # Iterate over all grid cells in the world and \n      # determine infection probability based on\n      # the number of already sick individuals in that grid cell.\n      for (i in 1:self$size) {\n        for (j in 1:self$size) {\n          agents &lt;- self$world[[i, j]]\n          num_sick &lt;- sum(vapply(agents, function(agent) agent$state == \"sick\", logical(1)))\n          # Now, probability of becoming sick is naively proportional \n          # to the percentage of already sick individuals in the cell\n          # where beta is the transmission probability\n          sick_prob &lt;- 1 - ((1 - beta) ^ num_sick)\n          for (agent in agents) {\n            agent$update_state(sick_prob, recovery_prob, death_prob)\n          }\n        }\n      }\n    },\n    \n    get_counts = function() {\n      counts &lt;- data.frame(\n        row = integer(),\n        col = integer(),\n        healthy = integer(),\n        immune = integer(),\n        sick = integer(),\n        dead = integer()\n      )\n      for (i in 1:self$size) {\n        for (j in 1:self$size) {\n          agents &lt;- self$world[[i, j]]\n          counts &lt;- rbind(counts, data.frame(\n            row = i,\n            col = j,\n            healthy = sum(vapply(agents, function(agent) agent$state == \"healthy\", logical(1))),\n            immune = sum(vapply(agents, function(agent) agent$state == \"immune\", logical(1))),\n            sick = sum(vapply(agents, function(agent) agent$state == \"sick\", logical(1))),\n            dead = sum(vapply(agents, function(agent) agent$state == \"dead\", logical(1)))\n          ))\n        }\n      }\n      return(counts)\n    }\n  )\n)\n\n\n\n\n\n\n\nTip\n\n\n\nOne line of code is probably a bit non-intuitive:\n\nsick_prob &lt;- 1 - ((1 - beta) ^ num_sick)\n\nHere, parameter beta (\\(\\beta\\)) is the so-called transmission probability that is specific for each disease agent. Now, \\(P({not\\_sick}) = (1 - \\beta)^{N_{sick}}\\) is the probability of NOT catching the disease from any of \\(N_{sick}\\) neighbors. Finally, the chance of becoming sick in a given cell is \\(P_{sick} = 1 - P({not\\_sick}) = 1 - (1 - \\beta)^{N_{sick}}\\)"
  },
  {
    "objectID": "posts/R6_disease_sim.html#auxiliary-functions",
    "href": "posts/R6_disease_sim.html#auxiliary-functions",
    "title": "Pest in R using R6 classes",
    "section": "Auxiliary functions",
    "text": "Auxiliary functions\nI have written a function that visualizes states of our world as the simulation goes on using ggplot2 and gganimate packages. Here is the code:\n\nvisualize_simulation &lt;- function(results) {\n  p &lt;- ggplot(results, aes(x = col, y = row)) +\n    geom_tile(aes(fill = sick)) +\n    scale_fill_gradient(low = \"white\", high = \"red\") +\n    theme_minimal() +\n    labs(title = \"Disease Spread Simulation\", x = \"X\", y = \"Y\", fill = \"Sick Individuals\") +\n    transition_states(step, transition_length = 2, state_length = 1) +\n    ease_aes('linear') +\n    ggtitle('Disease Spread Simulation - Generation {closest_state}') +\n    theme(plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5))\n  \n  animate(p, nframes = length(unique(results$step)), fps = 2, renderer = gifski_renderer())\n}"
  },
  {
    "objectID": "posts/R6_disease_sim.html#running-simulation",
    "href": "posts/R6_disease_sim.html#running-simulation",
    "title": "Pest in R using R6 classes",
    "section": "Running simulation",
    "text": "Running simulation\nNow, we need a function that will enable us to run the simulation:\n\nlibrary(ggplot2)\nlibrary(gganimate)\nlibrary(progress)\n\nrun_simulation &lt;- function(size, num_steps, initial_immune, initial_sick, beta, recovery_prob, death_prob) {\n  stopifnot(recovery_prob + death_prob &lt;= 1) # some simplistic input validation\n  pb &lt;- progress_bar$new(total = num_steps + 1)\n  \n  world &lt;- World$new(size)\n  \n  # Initialize agents\n  if (initial_healthy &gt; 0) {\n    for (i in 1:initial_healthy) {\n      row &lt;- sample(1:size, 1)\n      col &lt;- sample(1:size, 1)\n      world$add_agent(row, col, Agent$new())\n    }\n  }\n  \n  # Introduce immune and sick agents\n  if (initial_immune &gt; 0) {\n    for (i in 1:initial_immune) {\n      row &lt;- sample(1:size, 1)\n      col &lt;- sample(1:size, 1)\n      world$add_agent(row, col, Agent$new(state = \"immune\"))\n    }\n  }\n  \n  if (initial_sick &gt; 0) {\n    for (i in 1:initial_sick) {\n      row &lt;- sample(1:size, 1)\n      col &lt;- sample(1:size, 1)\n      world$add_agent(row, col, Agent$new(state = \"sick\"))\n    }\n  }\n  \n  results &lt;- list()\n  \n  # Save the initial state of the world\n  counts &lt;- world$get_counts()\n  counts$step &lt;- 1\n  results[[1]] &lt;- counts\n  \n  \n  # Simulate one generation\n  for (step in 2:num_steps + 1) {\n    world$update_states(beta, recovery_prob, death_prob)\n    world$move_agents()\n    counts &lt;- world$get_counts()\n    counts$step &lt;- step\n    results[[step]] &lt;- counts\n    pb$tick()\n  }\n  \n  results &lt;- do.call(rbind, results)\n  \n  return(results)\n}\n\nFinally, we can run our simulation:\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Parameters\nsize &lt;- 20                    # World size\nnum_steps &lt;- 50               # Number of generations\ninitial_healthy &lt;- 998\ninitial_immune &lt;- 0\ninitial_sick &lt;- 2\nbeta &lt;- 0.5                  # Transmission probability\nrecovery_prob &lt;- 0.1\ndeath_prob &lt;- 0.05\n\n# Run the simulation\nresults &lt;- run_simulation(size, num_steps, initial_immune, initial_sick, beta, recovery_prob, death_prob)\n\nresults |&gt; group_by(step) |&gt; \n  summarise(n_sick = sum(sick), n_healthy = sum(healthy), n_immune = sum(immune), n_dead = sum(dead)) |&gt; \n  pivot_longer(starts_with(\"n_\"), names_to = 'measure') |&gt; \n  ggplot(aes(x = step, y = value, col=measure)) + geom_line() + theme_minimal()"
  },
  {
    "objectID": "teaching.html",
    "href": "teaching.html",
    "title": "Teachings",
    "section": "",
    "text": "Non scholae sed vitae discimus."
  },
  {
    "objectID": "teaching.html#authored-courses",
    "href": "teaching.html#authored-courses",
    "title": "Teachings",
    "section": "Authored Courses",
    "text": "Authored Courses\n\nRaukR. Advanced R for Bioinformatics Summer School, Visby, Sweden. 2018, 2019, 2021, 2022, 2023, 2024\nR programming for Life Scientists. A SciLife Lab course. 2015 (1x), 2016 (2x), 2017 (2x), 2018, 2020.\nStatistical Methods in Genetic Mapping: An R-based Course. A 4 ETCS graduate-level course. Nov-Dec 2013.\nLUPA Workshop: GWAS Analyses in Stratified Populations, Uppsala, May 2011.\nThe Next-Generation Sequencing - Bioinformatics and Data Analysis (a PhD-level courses)."
  },
  {
    "objectID": "teaching.html#courses-as-teacher-ta",
    "href": "teaching.html#courses-as-teacher-ta",
    "title": "Teachings",
    "section": "Courses as teacher / TA",
    "text": "Courses as teacher / TA\n\nBioinformatics 3MR103 (undergraduate level). Module on machine learning. 2023.\nNeural Networks and Deep Learning. Module: From autoencoders to beta-Variational Autoencoders. 2022, 2023.\nApplication Oriented Deep Learning in Physics. 1FA386. Guest lectures/labs on autoencoders and convolutional neural networks. 2021,\nR programming for Life Scientists. A SciLife Lab course. 2015 (1x), 2016 (2x), 2017 (2x).\nStatistical Methods in Genetic Mapping: An R-based Course. A 4 ETCS graduate-level course. Nov-Dec 2013.\nBoolean Reasoning (lectures and labs on random forests)\nKnowledge-based Systems in Bioinformatics"
  },
  {
    "objectID": "teaching.html#thesis-advisor",
    "href": "teaching.html#thesis-advisor",
    "title": "Teachings",
    "section": "Thesis Advisor",
    "text": "Thesis Advisor\n\nMasters thesis: Moa Qvarnlöv. The accuracy, reliability and practicality of AI systems in analyzing and interpreting medical images for improved patient diagnosis and treatment.(subject reader, thesis defended 2024)\nMasters thesis: Yasemin Utkueri. Enhancing cDNA Basecalls for Non-Model Organisms Using Custom Nanopore Models: A Case Study on Krill.(subject reader, thesis defended 2024)\nPhD thesis: Sharadha Sakthikumar Characterizing the spectrum of somatic alterations in canine and human cancers. (co-advisor, thesis defended 2020)\nPhD thesis: Simon Forsberg. Complex Trait Genetics: Beyond Additivity. (co-advisor, thesis defended 2016)\nPhD thesis: Muhammad Ahsan. Identification and evaluation of functional sequences, selective sweeps and candidate mutations within QTL regions regulating growth in chicken. (co-advisor, thesis defended in 2014)\nMasters thesis: Małgorzata Kauczynska. Random Forest-based classifiers for prediction of SLE risk from SNP microarray data. (co-advisor, defended 2006)\nResearch project: Oskar Gauffin, analysis of time-spatial data on microbehavior in the domestic dog. 2015 (advisor)\nResearch project (within the ERASMUS European project): Jagoda Jabłońska. Development and application of novel tools for enhanced genome-wide association studies. Published in Bioinformatics, 2015, 2016\nResearch project: Andreas E. Lundberg. A tool for assembly and SNP detection using data coming from different SOLiD sequencing setups (advisor)\nResearch project: Simon Forsberg. An R package for assessment of mutation impact on protein function (advisor)\nResearch project: Samuel Lampa. PTMatcher, a web-based tool for predicting post-translational modifications in proteins"
  },
  {
    "objectID": "teaching.html#thesis-committee",
    "href": "teaching.html#thesis-committee",
    "title": "Teachings",
    "section": "Thesis Committee",
    "text": "Thesis Committee\n\nPhD Committee member: Rickard Hamarén. From the migrations of herders and farmers to the colonial era and the modern-day: Genetic inferences on African demographic history (thesis defended 2022)\nPhD Committee member: Martin Dahlö. Approaches for Distributing Large Scale Bioinformatic Analyses (thesis defended in 2021)\nPhD Committee member: Andrea Garcia Montaner. Genome evolution of a bee-associated bacterium (thesis defended in 2020)\nLicenciate opponent: Kristina Ausmees. Efficient computational methods for applications in genomics (thesis opponent, defended 2019)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Marcin Kierczak",
    "section": "",
    "text": "I am a bioinformatics data scientist , currently working at the National Bioinformatics Infrastructure, Sweden at the Health & Clinical Support Team. I am also an associate professor in bioinformatics  at the Department of Cell and Molecular Biology, Uppsala University and at the Science For Life Laboratory, Uppsala, Sweden.\nAs a data scientist at NBIS, I am supporting research projects across Sweden with focus on:  machine-learning and AI (neural nets),  statistical genomics,  aDNA (ancient/historical DNA),  metagenomics and  DNA metabarcoding,  programming languages:  and .\nSince 2018, together with my colleagues, I am organizing RaukR. Advanced R Programming for Bioinformatics Summer School in Visby, Sweden.\nMy other interests include:  microcontroller programming and electronics,  additive manufacturing (3d printing),  software-defined radio and digital modes,  jazz, jazz/classical fusion,  hiking,  boating/sailing,  GPS, astro- and terrestrial navigation."
  },
  {
    "objectID": "index.html#cv",
    "href": "index.html#cv",
    "title": "Marcin Kierczak",
    "section": "CV",
    "text": "CV\nMarcin Kierczak, PhD\n\nMarcin dot Kierczak at scilifelab dot uu dot se | Uppsala, Sweden\n\n\n\n\n\n\n\nNote\n\n\n\n\nphonetic IPA transcription of my name is /Marćn Kierčak/, but I do not mind being called Martin since this is only a different spelling of the same name.\n\n\n\n\nProfile\nData scientist and bioinformatics data analyst with strong expertise in genomics and computational biology and statistics. Focused on data mining and biological sequence analysis.\n\n\nExperience\n\nBioinformatics Data Scientist, Science for Life Laboratory, National Bioinformatics Structure, Sweden. Uppsala, Sweden, 2017 – now\nResearcher, Kerstin Lindblad-Toh’s Lab, Department of Medical Biochemistry and Microbiology, Uppsala University, & Science for Life Laboratory, Uppsala, Sweden, 2014 – 2017\nAssistant researcher, Örjan Carlborg’s Lab, Computational Genetics Group, Department of Clinical Sciences, Swedish University of Agricultural Sciences, Sweden, 2010 – 2014\nPostdoctoral researcher, Örjan Carlborg’s Lab, Computational Genetics Group, Department of Animal Breeding and Genetics, Swedish University of Agricultural Sciences, Sweden, 2010 – 2014\nPhD student, The Linnaeus Centre for Bioinformatics, Uppsala University, Sweden, 2006 – 2009. Web consultant and database engineer, Global Diversity Foundation, 2006 – 2010\n\n\n\nEducation\n\nUppsala University, Uppsala, Sweden, 2006 – 2009. PhD student in bioinformatics at the Linnaeus Centre for Bioinformatics. The degree of Doctor of Philosophy in Bioinformatics awarded on the 16th of Dec 2009 by the Faculty of Technical and Natural Sciences.\nUppsala University, Uppsala, Sweden, 2003 – 2005. Master’s degree, major in molecular biology, masters thesis title: Construction of rough set-based classifiers for predicting HIV-1 resistance to NRTI drugs.\nWarsaw University, Warsaw, Poland, 2000 – 2003. Bachelor’s degree, in molecular biology, thesis title: Role of CDK-5 kinase in the development and functioning of CNS in mammals."
  },
  {
    "objectID": "writings.html",
    "href": "writings.html",
    "title": "Writings",
    "section": "",
    "text": "This page summarises my various writings, mainly scientific publications, main conference presentations and some educational materials. For the most current list of scientific publications, go to my Google Scholar profile page. Below, you can find a list of publications that is updated from time to time.\nApart from scientific publications, you can find some of my teaching materials here."
  },
  {
    "objectID": "writings.html#lore-papers",
    "href": "writings.html#lore-papers",
    "title": "Writings",
    "section": "Lore papers",
    "text": "Lore papers\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Journal\n        \n         \n          Title\n        \n         \n          Year\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nTitle\n\n\nJournal\n\n\nYear\n\n\n\n\n\n\nBayesian mixed model analysis uncovered 21 risk loci for chronic kidney disease in boxer dogs\n\n\nPLoS Genetics\n\n\n2023\n\n\n\n\nFOXO1 and FOXO3 cooperatively regulate innate lymphoid cell development\n\n\nFrontiers in immunology\n\n\n2022\n\n\n\n\nContribution of rare whole-genome sequencing variants to plasma protein levels and the missing heritability\n\n\nNature Communications\n\n\n2022\n\n\n\n\nA genomic and morphometric analysis of alpine bumblebees: Ongoing reductions in tongue length but no clear genetic component\n\n\nMolecular Ecology\n\n\n2022\n\n\n\n\nLinked-read whole-genome sequencing resolves common and private structural variants in multiple myeloma\n\n\nBlood Advances\n\n\n2022\n\n\n\n\nFOXO Dictates Initiation of B Cell Development and Myeloid Restriction in Common Lymphoid Progenitors\n\n\nFrontiers in Immunology\n\n\n2022\n\n\n\n\nGenErode: a bioinformatics pipeline to investigate genome erosion in endangered and extinct species\n\n\nBMC bioinformatics\n\n\n2022\n\n\n\n\nGenetic barriers to historical gene flow between cryptic species of alpine bumblebees revealed by comparative population genomics\n\n\nMolecular biology and evolution\n\n\n2021\n\n\n\n\nGenomic insights into the conservation status of the world’s last remaining Sumatran rhinoceros populations\n\n\nNature communications\n\n\n2021\n\n\n\n\nDNA metabarcoding for quality control of basil, Oregano, and Paprika\n\n\nFrontiers in plant science\n\n\n2021\n\n\n\n\nThe ABCC4 gene is associated with pyometra in golden retriever dogs\n\n\nScientific Reports\n\n\n2021\n\n\n\n\nBuilding de novo reference genome assemblies of complex eukaryotic microorganisms from single nuclei\n\n\nScientific Reports\n\n\n2020\n\n\n\n\nTranscriptomes from German shepherd dogs reveal differences in immune activity between atopic dermatitis affected and control skin\n\n\nImmunogenetics\n\n\n2020\n\n\n\n\nPre-extinction demographic stability and genomic signatures of adaptation in the woolly rhinoceros\n\n\nCurrent Biology\n\n\n2020\n\n\n\n\nAnalysing the joint effect of rare and common variants on human traits, using whole-genome sequencing data and a gene-based approach, increases the power to identify genetic effects\n\n\n \n\n\n2019\n\n\n\n\nSETD2 Is Recurrently Mutated in Whole-Exome Sequenced Canine OsteosarcomaMutational Landscape in Canine Osteosarcoma\n\n\nCancer research\n\n\n2018\n\n\n\n\nPredicting post-translational modifications from local sequence fragments using machine learning algorithms: Overview and best practices\n\n\nPrediction of Protein Secondary Structure\n\n\n2017\n\n\n\n\nA Model-Free Approach for Detecting Genomic Regions of Deep Divergence Using the Distribution of Haplotype Distances\n\n\nbioRxiv\n\n\n2017\n\n\n\n\nEffect of breed on plasma endothelin-1 concentration, plasma renin activity, and serum cortisol concentration in healthy dogs\n\n\nJournal of veterinary internal medicine\n\n\n2016\n\n\n\n\nAbsolute quantification reveals the stable transmission of a high copy number variant linked to autoinflammatory disease\n\n\nBMC genomics\n\n\n2016\n\n\n\n\nMultiple regulatory variants located in cell type-specific enhancers within the PKP2 locus form major risk and protective haplotypes for canine atopic dermatitis in German shepherd dog\n\n\nBMC Genetics\n\n\n2016\n\n\n\n\nThe shepherds’ tale: A genome-wide study across 9 dog breeds implicates two loci in the regulation of fructosamine serum concentration in Belgian shepherds\n\n\nPloS one\n\n\n2015\n\n\n\n\nGenome-wide analyses suggest mechanisms involving early B-cell development in canine IgA deficiency\n\n\nPLoS One\n\n\n2015\n\n\n\n\nCgmisc: Enhanced genome-wide association analyses and visualization\n\n\nBioinformatics\n\n\n2015\n\n\n\n\nA multi-breed genome-wide association analysis for canine hypothyroidism identifies a shared major risk locus on CFA12\n\n\nPLoS One\n\n\n2015\n\n\n\n\nA risk haplotype within the PKP2 locus shows association to Canine Atopic Dermatitis and contains cell-type specific enhancers\n\n\n \n\n\n2015\n\n\n\n\nCorrection: Genome-Wide Analyses Suggest Mechanisms Involving Early B-Cell Development in Canine IgA Deficiency\n\n\nPlos one\n\n\n2015\n\n\n\n\nExploring weight data on over 100,000 Swedish dogs of various breeds\n\n\nActa Veterinaria Scandinavica\n\n\n2015\n\n\n\n\nCorrection: Genome-Wide Analysis in German Shepherd Dogs Reveals Association of a Locus on CFA 27 with Atopic Dermatitis\n\n\nPlos Genetics\n\n\n2015\n\n\n\n\nEnsemble learning prediction of protein–protein interactions using proteins functional annotations\n\n\nMolecular BioSystems\n\n\n2014\n\n\n\n\nBreed differences in natriuretic peptides in healthy dogs\n\n\nJournal of Veterinary Internal Medicine\n\n\n2014\n\n\n\n\nEvaluation of machine learning algorithms on protein-protein interactions\n\n\n \n\n\n2014\n\n\n\n\nBreed Differences in Concentrations of Neuroendocrines and Cortisol in Healthy Dogs\n\n\nJournal of Veterinary Internal Medicine\n\n\n2014\n\n\n\n\nBreed differences in concentrations of circulating vasoactive peptides and cortisol in healthy dogs\n\n\nJournal of veterinary internal medicine\n\n\n2014\n\n\n\n\nGenome-wide analysis in German shepherd dogs reveals association of a locus on CFA 27 with atopic dermatitis\n\n\nPLoS genetics\n\n\n2013\n\n\n\n\nFine-grained adaptive divergence in an amphibian: genetic basis of phenotypic divergence and the role of nonrandom gene flow in restricting effective migration among wetlands\n\n\nMolecular ecology\n\n\n2013\n\n\n\n\nIdentification of candidate genes and mutations in QTL regions for chicken growth using bioinformatic analysis of NGS and SNP-chip data\n\n\nFrontiers in genetics\n\n\n2013\n\n\n\n\nPASE: a novel method for functional prediction of amino acid substitutions based on physicochemical properties\n\n\nFrontiers in genetics\n\n\n2013\n\n\n\n\nMAPfastR: quantitative trait loci mapping in outbred line crosses\n\n\nG3: Genes, Genomes, Genetics\n\n\n2013\n\n\n\n\nHigher order interactions: detection of epistasis using machine learning and evolutionary computation\n\n\nGenome-Wide Association Studies and Genomic Prediction\n\n\n2013\n\n\n\n\nThorough investigation of a canine autoinflammatory disease (AID) confirms one main risk locus and suggests a modifier locus for amyloidosis\n\n\nPLoS One\n\n\n2013\n\n\n\n\nTwo loci on chromosome 5 are associated with serum IgE levels in Labrador retrievers\n\n\nPloS one\n\n\n2012\n\n\n\n\nEffect of landscape in Rana arvalis genetic distance: application of circuit theory.\n\n\nForest\n\n\n2012\n\n\n\n\nThe Monte Carlo feature selection and interdependency discovery is unbiased\n\n\nControl and Cybernetics\n\n\n2011\n\n\n\n\nMonte Carlo feature selection and interdependency discovery in supervised classification\n\n\nAdvances in Machine Learning II: Dedicated to the Memory of Professor Ryszard S. Michalski\n\n\n2010\n\n\n\n\nComputational analysis of molecular interaction networks underlying change of HIV-1 resistance to selected reverse transcriptase inhibitors\n\n\nBioinformatics and biology insights\n\n\n2010\n\n\n\n\nAdvances in Machine Learning\n\n\n \n\n\n2010\n\n\n\n\nA rough set-based model of HIV-1 reverse transcriptase resistome\n\n\nBioinformatics and biology insights\n\n\n2009\n\n\n\n\nConstruction of Rough Set-Based Classifiers for Predicting HIV Resistance to Nucleoside Reverse Transcriptase Inhibitors\n\n\nGranular Computing: At the Junction of Rough Sets and Fuzzy Sets\n\n\n2008\n\n\n\n\nA statistical method for determining importance of variables in an information system\n\n\n \n\n\n2006\n\n\n\n\n\nNo matching items"
  }
]